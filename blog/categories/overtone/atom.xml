<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: overtone | Sean Brewer]]></title>
  <link href="https://www.seabre.com/blog/categories/overtone/atom.xml" rel="self"/>
  <link href="https://www.seabre.com/"/>
  <updated>2019-10-26T04:35:31-04:00</updated>
  <id>https://www.seabre.com/</id>
  <author>
    <name><![CDATA[Sean Brewer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Simple Livecoding Environment For Overtone With Light Table]]></title>
    <link href="https://www.seabre.com/blog/2013/08/31/a-simple-livecoding-environment-for-overtone-with-light-table/"/>
    <updated>2013-08-31T13:08:00-04:00</updated>
    <id>https://www.seabre.com/blog/2013/08/31/a-simple-livecoding-environment-for-overtone-with-light-table</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been using <a href="http://overtone.github.io/">Overtone</a> off and on for a while, and I&rsquo;ve been wanting to try out <a href="http://www.lighttable.com/">Light Table</a>, so I decided to see if I could get Overtone working with it.</p>

<p>Emacs is pretty much the standard for livecoding in Overtone, but it&rsquo;s not the most accessible environment for beginners. I actually use vim, but it&rsquo;s not that great, either. Light Table seems to be a good alternative, but I ran into some project dependency problems getting it setup. The fixes are easy to duplicate. After the problem is solved, it&rsquo;s nice.</p>

<p>I&rsquo;m going to assume the following: you&rsquo;re in a Linux environment, you already have a copy of Light Table installed and working, you have <a href="http://leiningen.org/">Leiningen</a> installed and working, and that you already have <a href="http://supercollider.sourceforge.net/">SuperCollider</a> installed and working, which we need for Overtone.</p>

<p>First, let&rsquo;s generate a new project somewhere:</p>

<p><code>$ lein new livecoding</code></p>

<p>Now, add the <code>livecoding</code> project to your workspace in Light Table. If you need help doing this, check the <a href="http://docs.lighttable.com/">docs</a>.</p>

<p>Inside your <code>livecoding</code> project, you should have <code>project.clj</code>, which looks like this:</p>

<pre><code class="clojure">(defproject livecoding "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "1.5.1"]])
</code></pre>

<p>OK, great. But now we need to add Overtone. Usually, we&rsquo;d just change <code>project.clj</code> to look like this:</p>

<pre><code class="clojure">(defproject livecoding "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "1.5.1"]
                 [overtone "0.8.1"]])
</code></pre>

<p>The problem with this is that Overtone has a dependency on Clojure 1.3.0, which Light Table&rsquo;s REPL refuses to use. We need to force Overtone to use Clojure 1.5.1. Let&rsquo;s fix that:</p>

<pre><code class="clojure">(defproject livecoding "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "1.5.1"]
                 [overtone "0.8.1" :exclusions [org.clojure/clojure]]
                 [org.clojure/data.json "0.2.2"]])
</code></pre>

<p>OK. So what does that do? We&rsquo;re forcing overtone to ignore its dependency on Clojure 1.3. We&rsquo;re also adding <code>data.json</code>, because Light Table&rsquo;s REPL appears to have a dependency on that. Now, we&rsquo;re good to go.</p>

<p>Make sure you saved the changes to <code>project.clj</code> and let&rsquo;s now open up <code>core.clj</code>, which should be in <code>src/livecoding</code> in our workspace.</p>

<p>Let&rsquo;s change it to this:</p>

<pre><code class="clojure">(ns livecoding.core
  (:use overtone.live))
</code></pre>

<p>Now let&rsquo;s get the REPL going. Just press <code>Ctrl+Enter</code> to boot up Overtone. It takes a little bit to get started, but once it boots up, let&rsquo;s just confirm it works. Change <code>core.clj</code> to:</p>

<pre><code class="clojure">(ns livecoding.core
  (:use overtone.live))

  (demo (sin-osc))
</code></pre>

<p>Highlight <code>(demo (sin-osc))</code> and press <code>Ctrl+Enter</code> and you should hear a simple Sine wave.</p>
]]></content>
  </entry>
  
</feed>
